import { NextRequest, NextResponse } from 'next/server';
import { getPayload } from 'payload';
import configPromise from '@payload-config';

export async function POST(
  request: NextRequest,
  { params }: { params: Promise<{ id: string }> }
) {
  try {
    const { id } = await params;
    const payload = await getPayload({
      config: configPromise,
    });

    // Get registration details
    const registration = await payload.findByID({
      collection: 'event-registrations',
      id: id,
    });

    if (!registration) {
      return NextResponse.json(
        { error: 'Kh√¥ng t√¨m th·∫•y ƒëƒÉng k√Ω' },
        { status: 404 }
      );
    }

    // Prepare email content
    const emailContent = `
      Ch√†o ${registration.fullName},

      C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω tham gia s·ª± ki·ªán "${registration.eventTitle}".

      Th√¥ng tin ƒëƒÉng k√Ω c·ªßa b·∫°n:
      - H·ªç t√™n: ${registration.fullName}
      - Email: ${registration.email}
      - S·ªë ƒëi·ªán tho·∫°i: ${registration.phone}
      - Lo·∫°i tham gia: ${registration.participationType === 'in-person' ? 'Tr·ª±c ti·∫øp' :
                       registration.participationType === 'online' ? 'Online' : 'C·∫£ hai'}
      ${registration.organization ? `- T·ªï ch·ª©c: ${registration.organization}` : ''}

      Ch√∫ng t√¥i s·∫Ω g·ª≠i th√¥ng tin chi ti·∫øt v·ªÅ s·ª± ki·ªán qua email n√†y trong th·ªùi gian s·ªõm nh·∫•t.

      Tr√¢n tr·ªçng,
      ƒê·ªôi ng≈© VRC
    `;

    // Send email (In a real app, you would use a proper email service)
    console.log(`üìß Sending confirmation email to ${registration.email}`);
    console.log(`Email content:\n${emailContent}`);

    // Update registration to mark confirmation as sent
    await payload.update({
      collection: 'event-registrations',
      id: id,
      data: {
        confirmationSent: true,
        status: 'confirmed',
      },
    });

    return NextResponse.json({
      success: true,
      message: 'Email x√°c nh·∫≠n ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng',
    });

  } catch (error) {
    console.error('‚ùå Error sending confirmation email:', error);

    return NextResponse.json(
      { error: 'C√≥ l·ªói x·∫£y ra khi g·ª≠i email x√°c nh·∫≠n.' },
      { status: 500 }
    );
  }
}
