// filepath: e:\Download\vrc\backend\src\seed\navigation.ts
import { Payload } from 'payload';
import { progressManager } from './utils/progressUtils';

export const seedNavigation = async (payload: Payload) => {
  console.log('üß≠ Seeding navigation...');

  try {
    // Fetch existing navigation to avoid duplicates
    const existingNav = await payload.find({
      collection: 'navigation',
      limit: 100,
    });

    // If we already have navigation items, skip
    if (existingNav.docs.length > 0) {
      console.log(`Found ${existingNav.docs.length} existing navigation items, skipping seed.`);
      return;
    }    // Create the navigation items with proper structure
    // Kh·ªüi t·∫°o progress bar cho vi·ªác t·∫°o menu
    progressManager.initProgressBar(2, 'Creating navigation menus');
    
    // Main menu navigation
    await payload.create({
      collection: 'navigation',
      data: {
        title: 'Menu ch√≠nh',
        type: 'main',
        order: 0,
        status: 'published',
        items: [
          {
            label: 'Trang ch·ªß',
            link: '/',
            target: '_self',
          },
          {
            label: 'S·∫£n ph·∫©m',
            link: '/products',
            target: '_self',
            childItems: [
              {
                label: 'ƒêi·ªÅu h√≤a c√¥ng nghi·ªáp',
                link: '/products/industrial',
                target: '_self',
              },
              {
                label: 'H·ªá th·ªëng l·∫°nh th∆∞∆°ng m·∫°i',
                link: '/products/commercial',
                target: '_self',
              },
              {
                label: 'Kho l·∫°nh',
                link: '/products/cold-storage',
                target: '_self',
              }
            ]
          },
          {
            label: 'D·ªãch v·ª•',
            link: '/services',
            target: '_self',
            childItems: [
              {
                label: 'B·∫£o tr√¨',
                link: '/maintenance',
                target: '_self',
              },
              {
                label: 'S·ª≠a ch·ªØa',
                link: '/repair',
                target: '_self',
              },
              {
                label: 'T∆∞ v·∫•n',
                link: '/consulting',
                target: '_self',
              }
            ]
          },
          {
            label: 'D·ª± √°n',
            link: '/projects',
            target: '_self',
          },
          {
            label: 'Tin t·ª©c',
            link: '/news',
            target: '_self',
          },
          {
            label: 'Li√™n h·ªá',
            link: '/contact',
            target: '_self',
          }
        ]
      }
    });

    // Footer menu
    await payload.create({
      collection: 'navigation',
      data: {
        title: 'Menu footer',
        type: 'footer',
        order: 0,
        status: 'published',
        items: [
          {
            label: 'S·∫£n ph·∫©m',
            link: '/products',
            target: '_self',
            childItems: [
              {
                label: 'ƒêi·ªÅu h√≤a c√¥ng nghi·ªáp',
                link: '/products/industrial',
                target: '_self',
              },
              {
                label: 'H·ªá th·ªëng l·∫°nh th∆∞∆°ng m·∫°i',
                link: '/products/commercial',
                target: '_self',
              },
              {
                label: 'Kho l·∫°nh',
                link: '/products/cold-storage',
                target: '_self',
              }
            ]
          },
          {
            label: 'D·ªãch v·ª•',
            link: '/services',
            target: '_self',
          },
          {
            label: 'V·ªÅ ch√∫ng t√¥i',
            link: '/about',
            target: '_self',
          },
          {
            label: 'Tin t·ª©c',
            link: '/news',
            target: '_self',
          },
          {
            label: 'Li√™n h·ªá',
            link: '/contact',
            target: '_self',
          }
        ]
      }
    });    // C·∫≠p nh·∫≠t ti·∫øn tr√¨nh sau khi t·∫°o menu footer
    progressManager.increment();
    
    // Ho√†n th√†nh progress bar
    progressManager.complete();
    
    console.log('‚úÖ Successfully seeded navigation');
  } catch (error) {
    console.error('Error seeding navigation:', error);
    progressManager.complete();
  }
};
