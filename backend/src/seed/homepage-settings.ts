import { Payload } from 'payload';

export const seedHomepageSettings = async (payload: Payload) => {
  console.log('üè† Seeding homepage settings...');

  try {
    await payload.updateGlobal({
      slug: 'homepage-settings',
      data: {
        heroSection: {
          enableCarousel: true,
          autoSlideInterval: 6,
          // Will use banners from existing collection
        },
        featuredSection: {
          isEnabled: true,
          title: 'S·∫£n ph·∫©m n·ªïi b·∫≠t',
          description: 'Kh√°m ph√° c√°c gi·∫£i ph√°p ƒëi·ªán l·∫°nh h√†ng ƒë·∫ßu c·ªßa ch√∫ng t√¥i',
          // Will use products from existing collection
          viewAllLink: '/products',
        },
        publicationsSection: {
          isEnabled: true,
          title: 'B√†i vi·∫øt m·ªõi nh·∫•t',
          description: 'Tham kh·∫£o c√°c b√°o c√°o, nghi√™n c·ª©u v√† h∆∞·ªõng d·∫´n m·ªõi nh·∫•t',
          displayMode: 'auto',
          numberOfPosts: 4,
          viewAllLink: '/publications',
        },
        resourcesSection: {
          isEnabled: true,
          title: 'C√¥ng c·ª• & T√†i nguy√™n',
          description: 'Truy c·∫≠p c√°c c√¥ng c·ª• t√≠nh to√°n, d·ªØ li·ªáu ph√¢n t√≠ch v√† t√†i nguy√™n h·ªó tr·ª£',
          leftPanel: {
            title: 'D·ªØ li·ªáu & Th·ªëng k√™ nƒÉng l∆∞·ª£ng',
            description: 'Truy c·∫≠p c∆° s·ªü d·ªØ li·ªáu to√†n di·ªán v·ªÅ hi·ªáu su·∫•t nƒÉng l∆∞·ª£ng, th·ªëng k√™ ti√™u th·ª• v√† xu h∆∞·ªõng th·ªã tr∆∞·ªùng m·ªõi nh·∫•t.',
            features: [
              { text: 'Th·ªëng k√™ ti√™u th·ª• ƒëi·ªán qu·ªëc gia' },
              { text: 'D·ªØ li·ªáu hi·ªáu su·∫•t thi·∫øt b·ªã' },
              { text: 'Xu h∆∞·ªõng c√¥ng ngh·ªá xanh' },
              { text: 'B√°o c√°o ph√¢n t√≠ch th·ªã tr∆∞·ªùng' },
            ],
            linkText: 'Xem th·ªëng k√™',
            linkUrl: '/data/statistics',
          },
          rightPanel: {
            title: 'C√¥ng c·ª• t√≠nh to√°n & Thi·∫øt k·∫ø',
            description: 'B·ªô c√¥ng c·ª• chuy√™n nghi·ªáp h·ªó tr·ª£ t√≠nh to√°n t·∫£i nhi·ªát, thi·∫øt k·∫ø h·ªá th·ªëng v√† l·ª±a ch·ªçn thi·∫øt b·ªã ph√π h·ª£p.',
            features: [
              { text: 'T√≠nh to√°n t·∫£i nhi·ªát ph√≤ng' },
              { text: 'Thi·∫øt k·∫ø h·ªá th·ªëng ƒëi·ªÅu h√≤a' },
              { text: 'Ch·ªçn thi·∫øt b·ªã ph√π h·ª£p' },
              { text: '∆Ø·ªõc t√≠nh chi ph√≠ l·∫Øp ƒë·∫∑t' },
            ],
            linkText: 'Kh√°m ph√° c√¥ng c·ª•',
            linkUrl: '/data/tools',
          },
        },
        contactSection: {
          isEnabled: true,
          backgroundColor: 'gray',
        },
        seoSettings: {
          metaTitle: 'VRC - Gi·∫£i ph√°p ƒëi·ªán l·∫°nh c√¥ng nghi·ªáp h√†ng ƒë·∫ßu Vi·ªát Nam',
          metaDescription: 'VRC cung c·∫•p gi·∫£i ph√°p ƒëi·ªán l·∫°nh c√¥ng nghi·ªáp to√†n di·ªán v·ªõi c√¥ng ngh·ªá ti√™n ti·∫øn, d·ªãch v·ª• chuy√™n nghi·ªáp v√† h·ªó tr·ª£ k·ªπ thu·∫≠t 24/7.',
          metaKeywords: 'ƒëi·ªán l·∫°nh c√¥ng nghi·ªáp, m√°y l·∫°nh c√¥ng nghi·ªáp, h·ªá th·ªëng l√†m l·∫°nh, thi·∫øt b·ªã ƒëi·ªÅu h√≤a, VRC Vietnam',
        },
      },
    });

    console.log('‚úÖ Homepage settings seeded successfully');
  } catch (error) {
    console.error('‚ùå Error seeding homepage settings:', error);
    throw error;
  }
};
