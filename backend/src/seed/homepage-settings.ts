import { Payload } from 'payload';

// Multilingual content for homepage settings
const multilingualContent = {
  vi: {
    featuredTopics: {
      sectionTitle: 'S·∫£n ph·∫©m n·ªïi b·∫≠t',
      sectionSubtitle: 'Kh√°m ph√° c√°c gi·∫£i ph√°p ƒëi·ªán l·∫°nh h√†ng ƒë·∫ßu c·ªßa ch√∫ng t√¥i',
    },
    latestPublications: {
      sectionTitle: 'B√†i vi·∫øt m·ªõi nh·∫•t',
    },
    dataResources: {
      resourcesTitle: 'D·ªØ li·ªáu & Th·ªëng k√™ nƒÉng l∆∞·ª£ng',
      toolsTitle: 'C√¥ng c·ª• t√≠nh to√°n & Thi·∫øt k·∫ø',
    },
    contactForm: {
      sectionTitle: 'Li√™n h·ªá v·ªõi ch√∫ng t√¥i',
      sectionSubtitle: 'ƒê·ªÉ l·∫°i th√¥ng tin, ch√∫ng t√¥i s·∫Ω t∆∞ v·∫•n cho b·∫°n',
      successMessage: 'C·∫£m ∆°n b·∫°n! Ch√∫ng t√¥i s·∫Ω li√™n h·ªá l·∫°i trong th·ªùi gian s·ªõm nh·∫•t.',
    },
    seo: {
      metaTitle: 'VRC - Gi·∫£i ph√°p ƒëi·ªán l·∫°nh c√¥ng nghi·ªáp h√†ng ƒë·∫ßu Vi·ªát Nam',
      metaDescription: 'VRC cung c·∫•p gi·∫£i ph√°p ƒëi·ªán l·∫°nh c√¥ng nghi·ªáp to√†n di·ªán v·ªõi c√¥ng ngh·ªá ti√™n ti·∫øn, d·ªãch v·ª• chuy√™n nghi·ªáp v√† h·ªó tr·ª£ k·ªπ thu·∫≠t 24/7.',
    },
    maintenance: {
      message: 'H·ªá th·ªëng ƒëang ƒë∆∞·ª£c b·∫£o tr√¨. Vui l√≤ng quay l·∫°i sau.',
    },
  },
  en: {
    featuredTopics: {
      sectionTitle: 'Featured Products',
      sectionSubtitle: 'Discover our leading refrigeration solutions',
    },
    latestPublications: {
      sectionTitle: 'Latest Articles',
    },
    dataResources: {
      resourcesTitle: 'Energy Data & Statistics',
      toolsTitle: 'Calculation & Design Tools',
    },
    contactForm: {
      sectionTitle: 'Contact Us',
      sectionSubtitle: 'Leave your information, we will advise you',
      successMessage: 'Thank you! We will contact you as soon as possible.',
    },
    seo: {
      metaTitle: 'VRC - Leading Industrial Refrigeration Solutions in Vietnam',
      metaDescription: 'VRC provides comprehensive industrial refrigeration solutions with advanced technology, professional services and 24/7 technical support.',
    },
    maintenance: {
      message: 'System is under maintenance. Please come back later.',
    },
  },
  tr: {
    featuredTopics: {
      sectionTitle: '√ñne √áƒ±kan √úr√ºnler',
      sectionSubtitle: '√ñnde gelen soƒüutma √ß√∂z√ºmlerimizi ke≈üfedin',
    },
    latestPublications: {
      sectionTitle: 'Son Makaleler',
    },
    dataResources: {
      resourcesTitle: 'Enerji Verileri ve ƒ∞statistikleri',
      toolsTitle: 'Hesaplama ve Tasarƒ±m Ara√ßlarƒ±',
    },
    contactForm: {
      sectionTitle: 'Bizimle ƒ∞leti≈üime Ge√ßin',
      sectionSubtitle: 'Bilgilerinizi bƒ±rakƒ±n, size danƒ±≈ümanlƒ±k verelim',
      successMessage: 'Te≈üekk√ºrler! En kƒ±sa s√ºrede sizinle ileti≈üime ge√ßeceƒüiz.',
    },
    seo: {
      metaTitle: 'VRC - Vietnam\'da √ñnde Gelen End√ºstriyel Soƒüutma √á√∂z√ºmleri',
      metaDescription: 'VRC, ileri teknoloji, profesyonel hizmetler ve 7/24 teknik destek ile kapsamlƒ± end√ºstriyel soƒüutma √ß√∂z√ºmleri sunar.',
    },
    maintenance: {
      message: 'Sistem bakƒ±m altƒ±ndadƒ±r. L√ºtfen daha sonra tekrar gelin.',
    },
  },
};

// Common non-localized data structure (matching actual globals schema)
const baseHomepageData = {
  heroSection: {
    enableCarousel: true,
    autoSlideInterval: 6,
    // Will use banners from existing collection
  },
  featuredSection: {
    isEnabled: true,
    // title and description will be set per locale
    viewAllLink: '/products',
  },
  publicationsSection: {
    isEnabled: true,
    // title and description will be set per locale
    displayMode: 'auto',
    numberOfPosts: 4,
    viewAllLink: '/publications',
  },
  resourcesSection: {
    isEnabled: true,
    // title will be set per locale for both panels
    leftPanel: {
      description: 'Truy c·∫≠p c∆° s·ªü d·ªØ li·ªáu to√†n di·ªán v·ªÅ hi·ªáu su·∫•t nƒÉng l∆∞·ª£ng, th·ªëng k√™ ti√™u th·ª• v√† xu h∆∞·ªõng th·ªã tr∆∞·ªùng m·ªõi nh·∫•t.',
      features: [
        { text: 'Th·ªëng k√™ ti√™u th·ª• ƒëi·ªán qu·ªëc gia' },
        { text: 'D·ªØ li·ªáu hi·ªáu su·∫•t thi·∫øt b·ªã' },
        { text: 'Xu h∆∞·ªõng c√¥ng ngh·ªá xanh' },
        { text: 'B√°o c√°o ph√¢n t√≠ch th·ªã tr∆∞·ªùng' },
      ],
      linkText: 'Xem th·ªëng k√™',
      linkUrl: '/data/statistics',
    },
    rightPanel: {
      description: 'B·ªô c√¥ng c·ª• chuy√™n nghi·ªáp h·ªó tr·ª£ t√≠nh to√°n t·∫£i nhi·ªát, thi·∫øt k·∫ø h·ªá th·ªëng v√† l·ª±a ch·ªçn thi·∫øt b·ªã ph√π h·ª£p.',
      features: [
        { text: 'T√≠nh to√°n t·∫£i nhi·ªát ph√≤ng' },
        { text: 'Thi·∫øt k·∫ø h·ªá th·ªëng ƒëi·ªÅu h√≤a' },
        { text: 'Ch·ªçn thi·∫øt b·ªã ph√π h·ª£p' },
        { text: '∆Ø·ªõc t√≠nh chi ph√≠ l·∫Øp ƒë·∫∑t' },
      ],
      linkText: 'Kh√°m ph√° c√¥ng c·ª•',
      linkUrl: '/data/tools',
    },
  },
  contactSection: {
    isEnabled: true,
    backgroundColor: 'gray' as const,
  },
  maintenance: {
    isEnabled: false,
  },
};

export const seedHomepageSettings = async (payload: Payload) => {
  console.log('üè† Seeding multilingual homepage settings...');

  try {
    // Check if homepage settings already exist
    let existingSettings;
    try {
      existingSettings = await payload.findGlobal({
        slug: 'homepage-settings',
        locale: 'vi', // Check with default locale
      });    } catch (_error) {
      console.log('No existing homepage settings found, will create new ones');
      existingSettings = null;
    }// Seed for each locale to ensure multilingual support
    const locales: ('vi' | 'en' | 'tr')[] = ['vi', 'en', 'tr'];

    for (const locale of locales) {
      console.log(`üìù Seeding homepage settings for locale: ${locale}`);

      // Get multilingual content for this locale
      const content = multilingualContent[locale as keyof typeof multilingualContent];

      // Merge base data with localized content
      const localeData = {
        ...baseHomepageData,
        // Override with localized content for featuredSection
        featuredSection: {
          ...baseHomepageData.featuredSection,
          title: content.featuredTopics.sectionTitle,
          description: content.featuredTopics.sectionSubtitle,
        },
        // publicationsSection mapping
        publicationsSection: {
          ...baseHomepageData.publicationsSection,
          title: content.latestPublications.sectionTitle,
          description: 'Tham kh·∫£o c√°c b√°o c√°o, nghi√™n c·ª©u v√† h∆∞·ªõng d·∫´n m·ªõi nh·∫•t',
          displayMode: 'auto' as const,
        },
        // resourcesSection mapping
        resourcesSection: {
          ...baseHomepageData.resourcesSection,
          title: 'C√¥ng c·ª• & T√†i nguy√™n',
          description: 'Truy c·∫≠p c√°c c√¥ng c·ª• t√≠nh to√°n, d·ªØ li·ªáu ph√¢n t√≠ch v√† t√†i nguy√™n h·ªó tr·ª£',
          leftPanel: {
            ...baseHomepageData.resourcesSection?.leftPanel,
            title: content.dataResources.resourcesTitle,
            description: 'Truy c·∫≠p c∆° s·ªü d·ªØ li·ªáu to√†n di·ªán v·ªÅ hi·ªáu su·∫•t nƒÉng l∆∞·ª£ng, th·ªëng k√™ ti√™u th·ª• v√† xu h∆∞·ªõng th·ªã tr∆∞·ªùng m·ªõi nh·∫•t.',
          },
          rightPanel: {
            ...baseHomepageData.resourcesSection?.rightPanel,
            title: content.dataResources.toolsTitle,
            description: 'B·ªô c√¥ng c·ª• chuy√™n nghi·ªáp h·ªó tr·ª£ t√≠nh to√°n t·∫£i nhi·ªát, thi·∫øt k·∫ø h·ªá th·ªëng v√† l·ª±a ch·ªçn thi·∫øt b·ªã ph√π h·ª£p.',
          },
        },
        // contactSection mapping
        contactSection: {
          ...baseHomepageData.contactSection,
        },
        // seoSettings mapping
        seoSettings: {
          metaTitle: content.seo.metaTitle,
          metaDescription: content.seo.metaDescription,
          metaKeywords: 'ƒëi·ªán l·∫°nh, c√¥ng nghi·ªáp, VRC, gi·∫£i ph√°p nƒÉng l∆∞·ª£ng',
        },
        // maintenance mapping
        maintenance: {
          ...baseHomepageData.maintenance,
        },
      };

      // If existing settings and this is not the first locale, check if it's actually localized
      // If no existing settings or this is the first locale, create/update fully
      if (existingSettings && locale !== 'vi') {
        // For non-default locales, check if the data is actually localized
        try {
          const localeSettings = await payload.findGlobal({
            slug: 'homepage-settings',
            locale,
          });

          // Check if this locale has been properly localized by comparing title
          // If the title matches the expected locale content, it's already localized
          const expectedTitle = content.featuredTopics.sectionTitle;
          const currentTitle = (localeSettings as unknown as { featuredSection?: { title?: string } })?.featuredSection?.title;

          if (currentTitle && currentTitle === expectedTitle) {
            console.log(`‚ö†Ô∏è Locale ${locale} data already localized, skipping to preserve existing data`);
            continue;
          } else {
            console.log(`üîÑ Locale ${locale} needs localization (current: "${currentTitle}", expected: "${expectedTitle}")`);
          }
        } catch (_error) {
          // Locale data doesn't exist, proceed with seeding
          console.log(`üìù Locale ${locale} data not found, proceeding with seeding`);
        }
      }

      await payload.updateGlobal({
        slug: 'homepage-settings',
        locale,
        data: localeData,
      });

      console.log(`‚úÖ Homepage settings seeded successfully for locale: ${locale}`);
    }

    console.log('‚úÖ All homepage settings seeded successfully across all locales');
  } catch (error) {
    console.error('‚ùå Error seeding homepage settings:', error);
    throw error;
  }
};
