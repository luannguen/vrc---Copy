import { getPayload } from 'payload';
import configPromise from '@/payload.config';

// Sample FAQ data cho t·∫•t c·∫£ 3 ng√¥n ng·ªØ
const faqsData = [
  {
    question: {
      vi: 'VRC Tech cung c·∫•p nh·ªØng d·ªãch v·ª• g√¨?',
      en: 'What services does VRC Tech provide?',
      tr: 'VRC Tech hangi hizmetleri saƒülƒ±yor?'
    },
    answer: {
      vi: 'VRC Tech chuy√™n cung c·∫•p c√°c gi·∫£i ph√°p c√¥ng ngh·ªá th√¥ng tin bao g·ªìm ph√°t tri·ªÉn ph·∫ßn m·ªÅm, thi·∫øt k·∫ø website, ·ª©ng d·ª•ng di ƒë·ªông, v√† t∆∞ v·∫•n chuy·ªÉn ƒë·ªïi s·ªë.',
      en: 'VRC Tech specializes in providing information technology solutions including software development, website design, mobile applications, and digital transformation consulting.',
      tr: 'VRC Tech, yazƒ±lƒ±m geli≈ütirme, web sitesi tasarƒ±mƒ±, mobil uygulamalar ve dijital d√∂n√º≈ü√ºm danƒ±≈ümanlƒ±ƒüƒ± dahil olmak √ºzere bilgi teknolojisi √ß√∂z√ºmleri saƒülama konusunda uzmanla≈ümƒ±≈ütƒ±r.'
    },
    searchKeywords: {
      vi: 'd·ªãch v·ª•, ph·∫ßn m·ªÅm, website, ·ª©ng d·ª•ng, t∆∞ v·∫•n',
      en: 'services, software, website, application, consulting',
      tr: 'hizmetler, yazƒ±lƒ±m, web sitesi, uygulama, danƒ±≈ümanlƒ±k'
    },
    category: 'services' as const,
    status: 'published' as const,
    featured: true,
    isPopular: true,
    helpfulCount: 25,
    order: 1
  },
  {
    question: {
      vi: 'L√†m th·∫ø n√†o ƒë·ªÉ li√™n h·ªá v·ªõi VRC Tech?',
      en: 'How to contact VRC Tech?',
      tr: 'VRC Tech ile nasƒ±l ileti≈üime ge√ßilir?'
    },
    answer: {
      vi: 'B·∫°n c√≥ th·ªÉ li√™n h·ªá v·ªõi ch√∫ng t√¥i qua email: contact@vrctech.vn, ƒëi·ªán tho·∫°i: +84 123 456 789, ho·∫∑c ƒë·∫øn tr·ª±c ti·∫øp vƒÉn ph√≤ng t·∫°i ƒë·ªãa ch·ªâ ƒë∆∞·ª£c c√¥ng b·ªë tr√™n website.',
      en: 'You can contact us via email: contact@vrctech.vn, phone: +84 123 456 789, or visit our office at the address published on the website.',
      tr: 'Bize e-posta yoluyla ula≈üabilirsiniz: contact@vrctech.vn, telefon: +84 123 456 789, veya web sitesinde yayƒ±nlanan adreste ofisimizi ziyaret edebilirsiniz.'
    },
    searchKeywords: {
      vi: 'li√™n h·ªá, email, ƒëi·ªán tho·∫°i, ƒë·ªãa ch·ªâ',
      en: 'contact, email, phone, address',
      tr: 'ileti≈üim, e-posta, telefon, adres'
    },
    category: 'general' as const,
    status: 'published' as const,
    featured: false,
    isPopular: true,
    helpfulCount: 18,
    order: 2
  },
  {
    question: {
      vi: 'Th·ªùi gian ph√°t tri·ªÉn m·ªôt d·ª± √°n th∆∞·ªùng m·∫•t bao l√¢u?',
      en: 'How long does it typically take to develop a project?',
      tr: 'Bir projenin geli≈ütirilmesi genellikle ne kadar s√ºrer?'
    },
    answer: {
      vi: 'Th·ªùi gian ph√°t tri·ªÉn ph·ª• thu·ªôc v√†o quy m√¥ v√† ƒë·ªô ph·ª©c t·∫°p c·ªßa d·ª± √°n. Th√¥ng th∆∞·ªùng, m·ªôt website ƒë∆°n gi·∫£n m·∫•t 2-4 tu·∫ßn, ·ª©ng d·ª•ng di ƒë·ªông m·∫•t 2-6 th√°ng, v√† h·ªá th·ªëng ph·∫ßn m·ªÅm l·ªõn c√≥ th·ªÉ m·∫•t 6-12 th√°ng.',
      en: 'Development time depends on the scale and complexity of the project. Typically, a simple website takes 2-4 weeks, a mobile app takes 2-6 months, and large software systems can take 6-12 months.',
      tr: 'Geli≈ütirme s√ºresi projenin √∂l√ßeƒüine ve karma≈üƒ±klƒ±ƒüƒ±na baƒülƒ±dƒ±r. Genellikle, basit bir web sitesi 2-4 hafta, bir mobil uygulama 2-6 ay ve b√ºy√ºk yazƒ±lƒ±m sistemleri 6-12 ay s√ºrebilir.'
    },
    searchKeywords: {
      vi: 'th·ªùi gian, ph√°t tri·ªÉn, d·ª± √°n, website, ·ª©ng d·ª•ng',
      en: 'time, development, project, website, application',
      tr: 'zaman, geli≈ütirme, proje, web sitesi, uygulama'
    },
    category: 'projects' as const,
    status: 'published' as const,
    featured: true,
    isPopular: false,
    helpfulCount: 12,
    order: 3
  },
  {
    question: {
      vi: 'VRC Tech c√≥ h·ªó tr·ª£ b·∫£o tr√¨ sau khi b√†n giao d·ª± √°n kh√¥ng?',
      en: 'Does VRC Tech provide maintenance support after project delivery?',
      tr: 'VRC Tech proje tesliminden sonra bakƒ±m desteƒüi saƒülƒ±yor mu?'
    },
    answer: {
      vi: 'C√≥, ch√∫ng t√¥i cung c·∫•p g√≥i b·∫£o tr√¨ v√† h·ªó tr·ª£ k·ªπ thu·∫≠t sau b√†n giao. G√≥i b·∫£o tr√¨ bao g·ªìm s·ª≠a l·ªói, c·∫≠p nh·∫≠t b·∫£o m·∫≠t, v√† h·ªó tr·ª£ k·ªπ thu·∫≠t trong v√≤ng 6-12 th√°ng t√πy theo g√≥i d·ªãch v·ª•.',
      en: 'Yes, we provide maintenance and technical support packages after delivery. Maintenance packages include bug fixes, security updates, and technical support for 6-12 months depending on the service package.',
      tr: 'Evet, teslimattan sonra bakƒ±m ve teknik destek paketleri saƒülƒ±yoruz. Bakƒ±m paketleri, hata d√ºzeltmeleri, g√ºvenlik g√ºncellemeleri ve hizmet paketine baƒülƒ± olarak 6-12 ay teknik destek i√ßerir.'
    },
    searchKeywords: {
      vi: 'b·∫£o tr√¨, h·ªó tr·ª£, b√†n giao, k·ªπ thu·∫≠t',
      en: 'maintenance, support, delivery, technical',
      tr: 'bakƒ±m, destek, teslimat, teknik'
    },
    category: 'warranty' as const,
    status: 'published' as const,
    featured: false,
    isPopular: true,
    helpfulCount: 15,
    order: 4
  },
  {
    question: {
      vi: 'Chi ph√≠ ph√°t tri·ªÉn m·ªôt website th∆∞·ªùng nh∆∞ th·∫ø n√†o?',
      en: 'What are the typical costs for website development?',
      tr: 'Web sitesi geli≈ütirme i√ßin tipik maliyetler nelerdir?'
    },
    answer: {
      vi: 'Chi ph√≠ ph√°t tri·ªÉn website ph·ª• thu·ªôc v√†o nhi·ªÅu y·∫øu t·ªë nh∆∞ thi·∫øt k·∫ø, t√≠nh nƒÉng, v√† ƒë·ªô ph·ª©c t·∫°p. Website c∆° b·∫£n t·ª´ 10-30 tri·ªáu VNƒê, website th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠ t·ª´ 50-200 tri·ªáu VNƒê. Ch√∫ng t√¥i s·∫Ω b√°o gi√° c·ª• th·ªÉ sau khi t∆∞ v·∫•n.',
      en: 'Website development costs depend on various factors such as design, features, and complexity. Basic websites range from $400-1200, e-commerce websites from $2000-8000. We will provide specific quotes after consultation.',
      tr: 'Web sitesi geli≈ütirme maliyetleri tasarƒ±m, √∂zellikler ve karma≈üƒ±klƒ±k gibi √ße≈üitli fakt√∂rlere baƒülƒ±dƒ±r. Temel web siteleri $400-1200, e-ticaret web siteleri $2000-8000 arasƒ±nda deƒüi≈üir. Danƒ±≈ümanlƒ±ktan sonra belirli teklifler sunacaƒüƒ±z.'
    },
    searchKeywords: {
      vi: 'chi ph√≠, gi√°, website, b√°o gi√°',
      en: 'cost, price, website, quote',
      tr: 'maliyet, fiyat, web sitesi, teklif'
    },
    category: 'payment' as const,
    status: 'published' as const,
    featured: true,
    isPopular: true,
    helpfulCount: 22,
    order: 5
  }
];

export async function seedFAQs() {
  const payload = await getPayload({ config: configPromise });

  console.log('üöÄ B·∫Øt ƒë·∫ßu t·∫°o d·ªØ li·ªáu m·∫´u FAQs...');

  try {
    // Ki·ªÉm tra xem ƒë√£ c√≥ FAQs n√†o ch∆∞a
    const existingFAQs = await payload.find({
      collection: 'faqs',
      limit: 1,
    });

    if (existingFAQs.totalDocs > 0) {
      console.log('‚ö†Ô∏è ƒê√£ c√≥ d·ªØ li·ªáu FAQs, b·ªè qua seed...');
      return;
    }

    // T·∫°o FAQs m·ªõi cho t·ª´ng locale
    for (const faqData of faqsData) {
      // T·∫°o FAQ v·ªõi locale vi (default)
      const createdFAQ = await payload.create({
        collection: 'faqs',
        data: {
          question: faqData.question.vi,
          answer: faqData.answer.vi,
          searchKeywords: faqData.searchKeywords.vi,
          category: faqData.category,
          status: faqData.status,
          featured: faqData.featured,
          isPopular: faqData.isPopular,
          helpfulCount: faqData.helpfulCount,
          order: faqData.order,
        },
        locale: 'vi',
      });

      // C·∫≠p nh·∫≠t v·ªõi locale en
      await payload.update({
        collection: 'faqs',
        id: createdFAQ.id,
        data: {
          question: faqData.question.en,
          answer: faqData.answer.en,
          searchKeywords: faqData.searchKeywords.en,
        },
        locale: 'en',
      });

      // C·∫≠p nh·∫≠t v·ªõi locale tr
      await payload.update({
        collection: 'faqs',
        id: createdFAQ.id,
        data: {
          question: faqData.question.tr,
          answer: faqData.answer.tr,
          searchKeywords: faqData.searchKeywords.tr,
        },
        locale: 'tr',
      });

      console.log(`‚úÖ ƒê√£ t·∫°o FAQ: ${faqData.question.vi}`);
    }

    console.log(`üéâ Ho√†n th√†nh! ƒê√£ t·∫°o ${faqsData.length} FAQs v·ªõi 3 ng√¥n ng·ªØ.`);

  } catch (error) {
    console.error('‚ùå L·ªói khi t·∫°o d·ªØ li·ªáu FAQs:', error);
    throw error;
  }
}

// Ch·∫°y n·∫øu file ƒë∆∞·ª£c execute tr·ª±c ti·∫øp
if (require.main === module) {
  seedFAQs()
    .then(() => {
      console.log('‚úÖ Seed FAQs ho√†n th√†nh!');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Seed FAQs th·∫•t b·∫°i:', error);
      process.exit(1);
    });
}
