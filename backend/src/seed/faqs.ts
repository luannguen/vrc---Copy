import { getPayload } from 'payload';
import config from '@payload-config';

export const seedFAQs = async (): Promise<void> => {
  console.log('üå± Seeding FAQs...')

  try {
    const payload = await getPayload({ config });

    // FAQ data d·ª±a tr√™n d·ªØ li·ªáu hardcode c·ªßa VRC
    const faqsData = [
      {
        question: 'T·ªïng c√¥ng ty VRC cung c·∫•p nh·ªØng d·ªãch v·ª• n√†o?',
        answer: {
          root: {
            type: 'root',
            children: [
              {
                type: 'paragraph',
                version: 1,
                children: [
                  {
                    type: 'text',
                    version: 1,
                    text: 'T·ªïng c√¥ng ty VRC cung c·∫•p ƒë·∫ßy ƒë·ªß c√°c d·ªãch v·ª• k·ªπ thu·∫≠t l·∫°nh bao g·ªìm: T∆∞ v·∫•n thi·∫øt k·∫ø h·ªá th·ªëng ƒëi·ªÅu h√≤a, L·∫Øp ƒë·∫∑t ƒëi·ªÅu h√≤a gia ƒë√¨nh v√† c√¥ng nghi·ªáp, B·∫£o tr√¨ b·∫£o d∆∞·ª°ng ƒë·ªãnh k·ª≥, S·ª≠a ch·ªØa kh·∫©n c·∫•p 24/7, Cung c·∫•p ph·ª• t√πng ch√≠nh h√£ng.'
                  }
                ]
              }
            ],
            direction: 'ltr' as const,
            format: '',
            indent: 0,
            version: 1
          }
        },
        category: 'services' as const,
        tags: [{ tag: 'd·ªãch v·ª•' }, { tag: 't∆∞ v·∫•n' }, { tag: 'l·∫Øp ƒë·∫∑t' }],
        isPopular: true,
        featured: true,
        order: 1,
        status: 'published' as const,
        language: 'vi' as const,
        searchKeywords: 'd·ªãch v·ª•, t∆∞ v·∫•n, l·∫Øp ƒë·∫∑t, b·∫£o tr√¨, s·ª≠a ch·ªØa, ph·ª• t√πng',
      },
      {
        question: 'VRC c√≥ h·ªó tr·ª£ d·ªãch v·ª• b·∫£o h√†nh kh√¥ng?',
        answer: {
          root: {
            type: 'root',
            children: [
              {
                type: 'paragraph',
                version: 1,
                children: [
                  {
                    type: 'text',
                    version: 1,
                    text: 'VRC cam k·∫øt b·∫£o h√†nh to√†n di·ªán: B·∫£o h√†nh thi·∫øt b·ªã 2-5 nƒÉm, B·∫£o h√†nh thi c√¥ng l·∫Øp ƒë·∫∑t 2 nƒÉm, H·ªó tr·ª£ b·∫£o tr√¨ mi·ªÖn ph√≠ 6 th√°ng ƒë·∫ßu, D·ªãch v·ª• kh√°ch h√†ng 24/7.'
                  }
                ]
              }
            ],
            direction: 'ltr' as const,
            format: '',
            indent: 0,
            version: 1
          }
        },
        category: 'services' as const,
        tags: [{ tag: 'b·∫£o h√†nh' }, { tag: 'h·ªó tr·ª£' }, { tag: 'd·ªãch v·ª•' }],
        isPopular: true,
        order: 2,
        status: 'published' as const,
        language: 'vi' as const,
        searchKeywords: 'b·∫£o h√†nh, h·ªó tr·ª£, d·ªãch v·ª•, thi·∫øt b·ªã, thi c√¥ng, b·∫£o tr√¨',
      },
      {
        question: 'VRC c√≥ nh·ªØng th∆∞∆°ng hi·ªáu ƒëi·ªÅu h√≤a n√†o?',
        answer: {
          root: {
            type: 'root',
            children: [
              {
                type: 'paragraph',
                version: 1,
                children: [
                  {
                    type: 'text',
                    version: 1,
                    text: 'VRC l√† ƒë·∫°i l√Ω ch√≠nh th·ª©c c·ªßa c√°c th∆∞∆°ng hi·ªáu h√†ng ƒë·∫ßu: Daikin, Mitsubishi Electric, Panasonic, LG, Samsung, Gree, Midea. T·∫•t c·∫£ s·∫£n ph·∫©m ƒë·ªÅu ch√≠nh h√£ng 100%.'
                  }
                ]
              }
            ],
            direction: 'ltr' as const,
            format: '',
            indent: 0,
            version: 1
          }
        },
        category: 'products' as const,
        tags: [{ tag: 'th∆∞∆°ng hi·ªáu' }, { tag: 'ƒëi·ªÅu h√≤a' }, { tag: 'ch√≠nh h√£ng' }],
        isPopular: true,
        featured: true,
        order: 3,
        status: 'published' as const,
        language: 'vi' as const,
        searchKeywords: 'th∆∞∆°ng hi·ªáu, Daikin, Mitsubishi, Panasonic, LG, Samsung',
      },
      {
        question: 'L√†m th·∫ø n√†o ƒë·ªÉ ch·ªçn c√¥ng su·∫•t ƒëi·ªÅu h√≤a ph√π h·ª£p?',
        answer: {
          root: {
            type: 'root',
            children: [
              {
                type: 'paragraph',
                version: 1,
                children: [
                  {
                    type: 'text',
                    version: 1,
                    text: 'ƒê·ªÉ ch·ªçn c√¥ng su·∫•t ph√π h·ª£p, c·∫ßn t√≠nh to√°n d·ª±a tr√™n: Di·ªán t√≠ch ph√≤ng (600-800 BTU/m¬≤), Chi·ªÅu cao tr·∫ßn, S·ªë ng∆∞·ªùi s·ª≠ d·ª•ng, Thi·∫øt b·ªã t·ªèa nhi·ªát, H∆∞·ªõng ph√≤ng. VRC cung c·∫•p d·ªãch v·ª• kh·∫£o s√°t mi·ªÖn ph√≠.'
                  }
                ]
              }
            ],
            direction: 'ltr' as const,
            format: '',
            indent: 0,
            version: 1
          }
        },
        category: 'products' as const,
        tags: [{ tag: 'c√¥ng su·∫•t' }, { tag: 't∆∞ v·∫•n' }, { tag: 'l·ª±a ch·ªçn' }],
        isPopular: true,
        featured: false,
        order: 4,
        status: 'published' as const,
        language: 'vi' as const,
        searchKeywords: 'c√¥ng su·∫•t, BTU, di·ªán t√≠ch, t∆∞ v·∫•n, kh·∫£o s√°t',
      },
      {
        question: 'Th·ªùi gian b·∫£o h√†nh d·ªãch v·ª• l·∫Øp ƒë·∫∑t ƒëi·ªÅu h√≤a l√† bao l√¢u?',
        answer: {
          root: {
            type: 'root',
            children: [
              {
                type: 'paragraph',
                version: 1,
                children: [
                  {
                    type: 'text',
                    version: 1,
                    text: 'VRC cam k·∫øt b·∫£o h√†nh d·ªãch v·ª• l·∫Øp ƒë·∫∑t trong 24 th√°ng cho thi·∫øt b·ªã v√† 12 th√°ng cho thi c√¥ng. B·∫£o h√†nh bao g·ªìm: S·ª≠a ch·ªØa mi·ªÖn ph√≠ c√°c l·ªói k·ªπ thu·∫≠t, Thay th·∫ø linh ki·ªán b·ªã l·ªói, H·ªó tr·ª£ k·ªπ thu·∫≠t 24/7.'
                  }
                ]
              }
            ],
            direction: 'ltr' as const,
            format: '',
            indent: 0,
            version: 1
          }
        },
        category: 'warranty' as const,
        tags: [{ tag: 'b·∫£o h√†nh' }, { tag: 'l·∫Øp ƒë·∫∑t' }, { tag: 'ƒëi·ªÅu h√≤a' }],
        isPopular: true,
        featured: true,
        order: 5,
        status: 'published' as const,
        language: 'vi' as const,
        searchKeywords: 'b·∫£o h√†nh, l·∫Øp ƒë·∫∑t, ƒëi·ªÅu h√≤a, th·ªùi gian, cam k·∫øt',
      }
    ];

    // X√≥a t·∫•t c·∫£ FAQs hi·ªán c√≥
    await payload.delete({
      collection: 'faqs',
      where: {},
    });

    console.log('üóëÔ∏è Cleared existing FAQs');

    // T·∫°o FAQs m·ªõi
    for (const faqData of faqsData) {      await payload.create({
        collection: 'faqs' as const,
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        data: faqData as any,
      });
    }

    console.log(`‚úÖ Successfully seeded ${faqsData.length} FAQs`);

  } catch (error) {
    console.error('‚ùå Error during FAQ seeding:', error)
    throw error
  }
}
