version: '3.8'

services:
  # MongoDB Database
  mongo:
    image: mongo:7.0
    container_name: vrc-mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: vrcadmin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: vrcpayload
    volumes:
      - mongo_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    ports:
      - "27017:27017"
    networks:
      - vrc-network

  # Backend Service
  vrc-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: vrc-backend
    restart: always
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_SERVER_URL: ${BACKEND_URL}
      DATABASE_URI: mongodb://vrcadmin:${MONGO_PASSWORD}@mongo:27017/vrcpayload?authSource=admin
      PAYLOAD_SECRET: ${PAYLOAD_SECRET}
      PREVIEW_SECRET: ${PREVIEW_SECRET}
      CRON_SECRET: ${CRON_SECRET}
    ports:
      - "3000:3000"
    depends_on:
      - mongo
    volumes:
      - backend_uploads:/app/media
    networks:
      - vrc-network

  # Frontend Service  
  vrc-frontend:
    build:
      context: ./vrcfrontend
      dockerfile: Dockerfile
    container_name: vrc-frontend
    restart: always
    environment:
      VITE_API_URL: ${BACKEND_URL}
      VITE_PUBLIC_API_KEY: ${API_KEY}
      VITE_NODE_ENV: production
    ports:
      - "8080:80"
    depends_on:
      - vrc-backend
    networks:
      - vrc-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: vrc-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - vrc-backend
      - vrc-frontend
    networks:
      - vrc-network

volumes:
  mongo_data:
  backend_uploads:
  nginx_logs:

networks:
  vrc-network:
    driver: bridge
